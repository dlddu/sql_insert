CREATE TABLE STATUS_TYPE (ST_ID CHAR(4) NOT NULL, ST_NAME CHAR(10) NOT NULL, PRIMARY KEY (ST_ID));
CREATE TABLE ZIP_CODE (ZC_CODE CHAR(12) NOT NULL, ZC_TOWN CHAR(80) NOT NULL, ZC_DIV CHAR(80) NOT NULL, PRIMARY KEY (ZC_CODE));
CREATE TABLE TAXRATE (TX_ID CHAR(4) NOT NULL, TX_NAME CHAR(50) NOT NULL, TX_RATE DECIMAL(6,5) NOT NULL, PRIMARY KEY (TX_ID), CONSTRAINT TX_RATE_VALID CHECK (TX_RATE >= 0 AND TX_RATE <= 1));
CREATE TABLE SECTOR (SC_ID CHAR(2) NOT NULL, SC_NAME CHAR(30) NOT NULL, PRIMARY KEY (SC_ID));
CREATE TABLE NEWS_ITEM (NI_ID BIGINT NOT NULL, NI_HEADLINE CHAR(80) NOT NULL, NI_SUMMARY CHAR(255) NOT NULL, NI_ITEM LONGBLOB NOT NULL, NI_DTS DATETIME NOT NULL, NI_SOURCE CHAR(30) NOT NULL, NI_AUTHOR CHAR(30), PRIMARY KEY (NI_ID));
CREATE TABLE TRADE_TYPE (TT_ID CHAR(3) NOT NULL, TT_NAME CHAR(12) NOT NULL, TT_IS_SELL BOOLEAN NOT NULL, TT_IS_MRKT BOOLEAN NOT NULL, PRIMARY KEY (TT_ID), CONSTRAINT TT_IS_SELL_VALID CHECK (TT_IS_SELL IN (0, 1)), CONSTRAINT TT_IS_MRKT_VALID CHECK (TT_IS_MRKT IN (0, 1)));
CREATE TABLE ADDRESS (AD_ID BIGINT NOT NULL, AD_LINE1 CHAR(80), AD_LINE2 CHAR(80), AD_ZC_CODE CHAR(12) NOT NULL, AD_CTRY CHAR(80), PRIMARY KEY (AD_ID), FOREIGN KEY (AD_ZC_CODE) REFERENCES ZIP_CODE(ZC_CODE));
CREATE TABLE INDUSTRY (IN_ID CHAR(2) NOT NULL, IN_NAME CHAR(50) NOT NULL, IN_SC_ID CHAR(2) NOT NULL, PRIMARY KEY (IN_ID), FOREIGN KEY (IN_SC_ID) REFERENCES SECTOR(SC_ID));
CREATE TABLE CHARGE (CH_TT_ID CHAR(3) NOT NULL, CH_C_TIER NUMERIC(1) NOT NULL CHECK (CH_C_TIER IN (1, 2, 3)), CH_CHRG DECIMAL NOT NULL CHECK (CH_CHRG >= 0), PRIMARY KEY (CH_TT_ID, CH_C_TIER), FOREIGN KEY (CH_TT_ID) REFERENCES TRADE_TYPE(TT_ID));
CREATE TABLE BROKER (B_ID BIGINT NOT NULL, B_ST_ID CHAR(4) NOT NULL, B_NAME CHAR(49) NOT NULL, B_NUM_TRADES NUMERIC(9) NOT NULL, B_COMM_TOTAL DECIMAL NOT NULL, PRIMARY KEY (B_ID), FOREIGN KEY (B_ST_ID) REFERENCES STATUS_TYPE(ST_ID));
CREATE TABLE COMPANY (CO_ID BIGINT NOT NULL, CO_ST_ID CHAR(4) NOT NULL, CO_NAME CHAR(60) NOT NULL, CO_IN_ID CHAR(2) NOT NULL, CO_SP_RATE CHAR(4) NOT NULL, CO_CEO CHAR(46) NOT NULL, CO_AD_ID BIGINT NOT NULL, CO_DESC CHAR(150) NOT NULL, CO_OPEN_DATE DATE NOT NULL, PRIMARY KEY (CO_ID), FOREIGN KEY (CO_ST_ID) REFERENCES STATUS_TYPE(ST_ID), FOREIGN KEY (CO_IN_ID) REFERENCES INDUSTRY(IN_ID), FOREIGN KEY (CO_AD_ID) REFERENCES ADDRESS(AD_ID));
CREATE TABLE CUSTOMER (C_ID BIGINT NOT NULL, C_TAX_ID CHAR(20) NOT NULL, C_ST_ID CHAR(4) NOT NULL, C_L_NAME CHAR(25) NOT NULL, C_F_NAME CHAR(20) NOT NULL, C_M_NAME CHAR(1), C_GNDR CHAR(1) CHECK (C_GNDR IN ('M', 'F')), C_TIER NUMERIC(1) NOT NULL CHECK (C_TIER IN (1, 2, 3)), C_DOB DATE NOT NULL, C_AD_ID BIGINT NOT NULL, C_CTRY_1 CHAR(3), C_AREA_1 CHAR(3), C_LOCAL_1 CHAR(10), C_EXT_1 CHAR(5), C_CTRY_2 CHAR(3), C_AREA_2 CHAR(3), C_LOCAL_2 CHAR(10), C_EXT_2 CHAR(5), C_CTRY_3 CHAR(3), C_AREA_3 CHAR(3), C_LOCAL_3 CHAR(10), C_EXT_3 CHAR(5), C_EMAIL_1 CHAR(50), C_EMAIL_2 CHAR(50), PRIMARY KEY (C_ID), FOREIGN KEY (C_ST_ID) REFERENCES STATUS_TYPE(ST_ID), FOREIGN KEY (C_AD_ID) REFERENCES ADDRESS(AD_ID));
CREATE TABLE EXCHANGE (EX_ID CHAR(6) NOT NULL, EX_NAME CHAR(100) NOT NULL, EX_NUM_SYMB INT NOT NULL, EX_OPEN INT NOT NULL, EX_CLOSE INT NOT NULL, EX_DESC CHAR(150), EX_AD_ID BIGINT NOT NULL, PRIMARY KEY (EX_ID), FOREIGN KEY (EX_AD_ID) REFERENCES ADDRESS(AD_ID));
CREATE TABLE CUSTOMER_ACCOUNT (CA_ID BIGINT NOT NULL, CA_B_ID BIGINT NOT NULL, CA_C_ID BIGINT NOT NULL, CA_NAME CHAR(50), CA_TAX_ST NUMERIC(1) NOT NULL CHECK (CA_TAX_ST IN (0, 1, 2)), CA_BAL DECIMAL NOT NULL, PRIMARY KEY (CA_ID), FOREIGN KEY (CA_B_ID) REFERENCES BROKER(B_ID), FOREIGN KEY (CA_C_ID) REFERENCES CUSTOMER(C_ID));
CREATE TABLE CUSTOMER_TAXRATE (CX_TX_ID CHAR(4) NOT NULL, CX_C_ID BIGINT NOT NULL, PRIMARY KEY (CX_TX_ID, CX_C_ID), FOREIGN KEY (CX_TX_ID) REFERENCES TAXRATE(TX_ID), FOREIGN KEY (CX_C_ID) REFERENCES CUSTOMER(C_ID));
CREATE TABLE COMMISSION_RATE (CR_C_TIER NUMERIC(1) NOT NULL CHECK (CR_C_TIER IN (1, 2, 3)), CR_TT_ID CHAR(3) NOT NULL, CR_EX_ID CHAR(6) NOT NULL, CR_FROM_QTY BIGINT NOT NULL CHECK (CR_FROM_QTY >= 0), CR_TO_QTY BIGINT NOT NULL CHECK (CR_TO_QTY > CR_FROM_QTY), CR_RATE NUMERIC(5,2) NOT NULL CHECK (CR_RATE >= 0 AND CR_RATE <= 100.00), PRIMARY KEY (CR_C_TIER, CR_TT_ID, CR_EX_ID, CR_FROM_QTY, CR_TO_QTY), FOREIGN KEY (CR_TT_ID) REFERENCES TRADE_TYPE(TT_ID), FOREIGN KEY (CR_EX_ID) REFERENCES EXCHANGE(EX_ID));
CREATE TABLE COMPANY_COMPETITOR (CP_CO_ID BIGINT NOT NULL, CP_COMP_CO_ID BIGINT NOT NULL, CP_IN_ID CHAR(2) NOT NULL, PRIMARY KEY (CP_CO_ID, CP_COMP_CO_ID, CP_IN_ID), FOREIGN KEY (CP_CO_ID) REFERENCES COMPANY(CO_ID), FOREIGN KEY (CP_COMP_CO_ID) REFERENCES COMPANY(CO_ID), FOREIGN KEY (CP_IN_ID) REFERENCES INDUSTRY(IN_ID));
CREATE TABLE FINANCIAL (FI_CO_ID BIGINT NOT NULL, FI_YEAR INT NOT NULL, FI_QTR INT NOT NULL, FI_QTR_START_DATE DATE NOT NULL, FI_REVENUE DECIMAL(20,5) NOT NULL, FI_NET_EARN DECIMAL(20,5) NOT NULL, FI_BASIC_EPS DECIMAL(20,5) NOT NULL, FI_DILUT_EPS DECIMAL(20,5) NOT NULL, FI_MARGIN DECIMAL(20,5) NOT NULL, FI_INVENTORY DECIMAL(20,5) NOT NULL, FI_ASSETS DECIMAL(20,5) NOT NULL, FI_LIABILITY DECIMAL(20,5) NOT NULL, FI_OUT_BASIC BIGINT NOT NULL, FI_OUT_DILUT BIGINT NOT NULL, PRIMARY KEY (FI_CO_ID, FI_YEAR, FI_QTR), FOREIGN KEY (FI_CO_ID) REFERENCES COMPANY(CO_ID), CONSTRAINT FI_QTR_VALID CHECK (FI_QTR IN (1, 2, 3, 4)));
CREATE TABLE NEWS_XREF (NX_NI_ID BIGINT NOT NULL, NX_CO_ID BIGINT NOT NULL, PRIMARY KEY (NX_NI_ID, NX_CO_ID), FOREIGN KEY (NX_NI_ID) REFERENCES NEWS_ITEM(NI_ID), FOREIGN KEY (NX_CO_ID) REFERENCES COMPANY(CO_ID));
CREATE TABLE SECURITY (S_SYMB CHAR(15) NOT NULL, S_ISSUE CHAR(6) NOT NULL, S_ST_ID CHAR(4) NOT NULL, S_NAME CHAR(70) NOT NULL, S_EX_ID CHAR(6) NOT NULL, S_CO_ID BIGINT NOT NULL, S_NUM_OUT BIGINT NOT NULL, S_START_DATE DATE NOT NULL, S_EXCH_DATE DATE NOT NULL, S_PE DECIMAL(20,5) NOT NULL, S_52WK_HIGH DECIMAL(20,5) NOT NULL, S_52WK_HIGH_DATE DATE NOT NULL, S_52WK_LOW DECIMAL(20,5) NOT NULL, S_52WK_LOW_DATE DATE NOT NULL, S_DIVIDEND DECIMAL(20,5) NOT NULL, S_YIELD DECIMAL(5,2) NOT NULL, PRIMARY KEY (S_SYMB), FOREIGN KEY (S_ST_ID) REFERENCES STATUS_TYPE(ST_ID), FOREIGN KEY (S_EX_ID) REFERENCES EXCHANGE(EX_ID), FOREIGN KEY (S_CO_ID) REFERENCES COMPANY(CO_ID), CONSTRAINT S_DIVIDEND_NOT_NEGATIVE CHECK (S_DIVIDEND >= 0));
CREATE TABLE WATCH_LIST (WL_ID BIGINT NOT NULL, WL_C_ID BIGINT NOT NULL, PRIMARY KEY (WL_ID), FOREIGN KEY (WL_C_ID) REFERENCES CUSTOMER(C_ID));
CREATE TABLE ACCOUNT_PERMISSION (AP_CA_ID BIGINT NOT NULL, AP_ACL CHAR(4) NOT NULL, AP_TAX_ID CHAR(20) NOT NULL, AP_L_NAME CHAR(25) NOT NULL, AP_F_NAME CHAR(20) NOT NULL, PRIMARY KEY (AP_CA_ID, AP_TAX_ID), FOREIGN KEY (AP_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID));
CREATE TABLE HOLDING_SUMMARY (HS_CA_ID BIGINT NOT NULL, HS_S_SYMB CHAR(15) NOT NULL, HS_QTY BIGINT NOT NULL, PRIMARY KEY (HS_CA_ID, HS_S_SYMB), FOREIGN KEY (HS_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID), FOREIGN KEY (HS_S_SYMB) REFERENCES SECURITY(S_SYMB));
CREATE TABLE WATCH_ITEM (WI_WL_ID BIGINT NOT NULL, WI_S_SYMB CHAR(15) NOT NULL, PRIMARY KEY (WI_WL_ID, WI_S_SYMB), FOREIGN KEY (WI_WL_ID) REFERENCES WATCH_LIST(WL_ID), FOREIGN KEY (WI_S_SYMB) REFERENCES SECURITY(S_SYMB));
CREATE TABLE TRADE (T_ID BIGINT NOT NULL, T_DTS DATETIME NOT NULL, T_ST_ID CHAR(4) NOT NULL, T_TT_ID CHAR(3) NOT NULL, T_IS_CASH BOOLEAN NOT NULL CHECK (T_IS_CASH IN (0, 1)), T_S_SYMB CHAR(15) NOT NULL, T_QTY BIGINT NOT NULL CHECK (T_QTY > 0), T_BID_PRICE DECIMAL(20,5) NOT NULL CHECK (T_BID_PRICE > 0), T_CA_ID BIGINT NOT NULL, T_EXEC_NAME CHAR(49) NOT NULL, T_TRADE_PRICE DECIMAL(20, 5), T_CHRG DECIMAL(20,5) NOT NULL CHECK (T_CHRG >= 0), T_COMM DECIMAL(20,5) NOT NULL CHECK (T_COMM >= 0), T_TAX DECIMAL(20,5) NOT NULL CHECK (T_TAX >= 0), T_LIFO BOOLEAN NOT NULL CHECK (T_LIFO IN (0, 1)), PRIMARY KEY (T_ID), FOREIGN KEY (T_ST_ID) REFERENCES STATUS_TYPE(ST_ID), FOREIGN KEY (T_TT_ID) REFERENCES TRADE_TYPE(TT_ID), FOREIGN KEY (T_S_SYMB) REFERENCES SECURITY(S_SYMB), FOREIGN KEY (T_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID));
CREATE TABLE DAILY_MARKET (DM_DATE DATE NOT NULL, DM_S_SYMB CHAR(15) NOT NULL, DM_CLOSE DECIMAL(20,5) NOT NULL, DM_HIGH DECIMAL(20,5) NOT NULL, DM_LOW DECIMAL(20,5) NOT NULL, DM_VOL BIGINT NOT NULL, PRIMARY KEY (DM_DATE, DM_S_SYMB), FOREIGN KEY (DM_S_SYMB) REFERENCES SECURITY(S_SYMB));
CREATE TABLE LAST_TRADE (LT_S_SYMB CHAR(15) NOT NULL, LT_DTS DATETIME NOT NULL, LT_PRICE DECIMAL(20,5) NOT NULL, LT_OPEN_PRICE DECIMAL(20,5) NOT NULL, LT_VOL BIGINT NOT NULL, PRIMARY KEY (LT_S_SYMB), FOREIGN KEY (LT_S_SYMB) REFERENCES SECURITY(S_SYMB));
